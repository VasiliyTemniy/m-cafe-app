@use '../colors' as *;
@use './alpha_vars' as v-v; // variant-vars
@use '../vars' as g-v; // global-vars
@use '../common' as *;
@use '../theming' as *;


%hover-common {
  & ~ .bar {
    height: v-v.$input-border-thickness-highlight;
    pointer-events: none;
  }
}

/**
 * Properties for 'alpha' basevariant class dropboxes
 */
.alpha.dropbox {
  position: relative;
  width: 100%;

  .chosen-wrapper {
    .chosen-option {
      font-size: v-v.$input-font-size;
      font-weight: v-v.$input-font-weight;
      padding: 0 0 v-v.$input-border-thickness-highlight v-v.$input-padding-left;
      display: flex;
      align-items: center;
      border: none;
      border-radius: 0;
      height: v-v.$input-height;
      width: 100%;
      background-color: inherit;
      cursor: pointer;
      user-select: none;
      transition:
        background-color v-v.$input-animation-speed ease-in-out,
        box-shadow v-v.$input-animation-speed ease-in-out;

      &:hover {
        @extend %hover-common;
      }
    };

    label {
      position: absolute;
      font-weight: normal;
      pointer-events: none;
      top: v-v.$input-label-lift-amount;
      font-size: v-v.$input-label-lifted-font-size;
      cursor: text;
      transition: v-v.$input-animation-speed ease;
    }

    .bar {
      position: absolute;
      width: calc(100% + v-v.$input-padding-left);
      bottom: 0;
      height: v-v.$input-border-thickness;
      transition:
        background-color v-v.$input-animation-speed ease-in-out,
        height v-v.$input-animation-speed ease-in-out;
    }

    .image.svg {
      position: absolute;
      height: v-v.$input-svg-scale;
      width: v-v.$input-svg-scale;
      top: 50%;
      right: 2px;
      transform: translateY(-50%) rotate(0deg);
      transition: transform v-v.$input-animation-speed ease-in-out;
      pointer-events: none;
    }
  }


  .dropdown-wrapper {
    position: absolute;
    width: calc(100% + v-v.$input-padding-left);

    .scrollable-wrapper {
      &::before {
        display: none;
      }
      .scrollbar {
        display: none;
      }

      .options-wrapper {
        position: relative;
        z-index: g-v.$modal-wrapper-z-index + 2;
        box-shadow: 0 10px 20px rgba(0,0,0,19%), 0 6px 6px rgba(0,0,0,23%);
        max-height: 0;
        transition: max-height v-v.$dropbox-slide-speed ease-in-out;
  
        .option {
          display: flex;
          align-items: center;
          height: v-v.$input-height;
          font-size: v-v.$input-font-size;
          padding-left: 0.5rem;
          user-select: none;
          cursor: pointer;
          position: relative;
          z-index: g-v.$modal-wrapper-z-index + 3;
          transition: background-color v-v.$input-animation-speed ease-in-out;
        }
      }

      .options-wrapper.filters {
        // .option {
        //   display: flex;
        //   justify-content: space-between;
        //   align-items: center;
        // }
  
        .switch {
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          right: 0.5rem;
          width: 2rem;
          &-label {
            width: 2rem;
          }
          &-switch {
            right: 0.9rem;
          }
  
          &-checkbox:checked + .switch-label {
            .switch-inner {
              margin-left: 0;
            }
            .switch-switch {
              right: 0;
            }
          }
        }
      }
    }
  
    .bar-after {
      height: v-v.$input-border-thickness-highlight;
      position: relative;
      z-index: g-v.$modal-wrapper-z-index + 5;
      max-height: 0;
      transition:
        max-height v-v.$dropbox-slide-speed ease-in-out,
        height v-v.$dropbox-slide-speed ease-in-out;
    }
  }

  &.expanded {

    .chosen-wrapper {
      .chosen-option {
        @extend %hover-common;
      }
    }

    .dropdown-wrapper {
      .scrollable-wrapper {
        .scrollbar {
          display: block;
        }
        .options-wrapper {
          max-height: v-v.$dropbox-options-max-height;
        }
      }
      .bar-after {
        max-height: v-v.$input-border-thickness-highlight;
      }
    }
    .image.svg {
      transform: translateY(-50%) rotate(180deg);
    }
  }
}


.alpha.dropbox.small {
  .chosen-wrapper {
    .chosen-option {
      height: calc(v-v.$input-height * 0.8);
      font-size: calc(v-v.$input-font-size * 0.8);
    }
    label {
      top: calc(v-v.$input-label-lift-amount * 0.8);
      font-size: calc(v-v.$input-label-lifted-font-size * 0.8);
    }
    .image.svg {
      height: calc(v-v.$input-svg-scale * 0.8);
      width: calc(v-v.$input-svg-scale * 0.8);
    }
  }

  .dropdown-wrapper {
    .options-wrapper {
      .option {
        height: calc(v-v.$input-height * 0.8);
        font-size: calc(v-v.$input-font-size * 0.8);
      }
    }
  }
}


/**
 * Alpha color scheme for alpha style dropboxes
 */
%hover-color-common {
  @include theme(background-color, AlphaBGThirdHighlight);

  & ~ .bar {
    @include theme(box-shadow, AlphaPrimary, 0 0 4px);
  }
}

.alpha.alpha-color.dropbox {
  .chosen-wrapper {

    .chosen-option {
      @include theme(color, AlphaText);
    }

    .chosen-option:hover {
      @extend %hover-color-common;
    }

    label {
      @include theme(color, AlphaText);
    }

    .bar {
      @include theme(background-color, AlphaPrimaryHighlight);
    }
  }


  .dropdown-wrapper {
    .options-wrapper {
      @include theme(background-color, AlphaBGSecond);
  
      .option {
        @include theme(color, AlphaText);
  
        &:hover {
          @include theme(background-color, AlphaBGThird);
        }
      }
    }

    .bar-after {
      @include theme(background-color, AlphaPrimaryHighlight);
      @include theme(box-shadow, AlphaPrimary, 0 0 4px);
    }

    &:disabled {
      ~ .image.svg {
        @include theme(filter, SVGFilter);
      }
    }

  }

  .image.svg {
    @include theme(filter, SVGFilter);
  }

  &.expanded {
    .chosen-option {
      @extend %hover-color-common;
    }
  }
}