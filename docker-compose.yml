version: '3.8'

services:

  frontend-customer:
    image: m-cafe-frontend-customer
    build:
      context: ./
      dockerfile: ./services/frontend/Dockerfile
      target: run-prod-front-customer
      args:
        - BACKEND_URL=http://localhost:8080/api
    container_name: m-cafe-frontend-customer
    depends_on:
      - nginx

  frontend-admin:
    image: m-cafe-frontend-admin
    build:
      context: ./
      dockerfile: ./services/frontend/Dockerfile
      target: run-prod-front-admin
      args:
        - BACKEND_URL=http://localhost:8080/api
    container_name: m-cafe-frontend-admin
    depends_on:
      - nginx

  frontend-manager:
    image: m-cafe-frontend-manager
    build:
      context: ./
      dockerfile: ./services/frontend/Dockerfile
      target: run-prod-front-manager
      args:
        - BACKEND_URL=http://localhost:8080/api
    container_name: m-cafe-frontend-manager
    depends_on:
      - nginx

  redis:
    image: m-cafe-redis
    build:
      context: ./
      dockerfile: ./redis/Dockerfile
    container_name: m-cafe-redis
    restart: always
    command: ["redis-server", "/etc/redis/redis.conf"]
    # #######################
    # NOT IMPLEMENTED ssl/tls tunnelling for redis
    # command: sh -c "stunnel /stunnel_take2.conf && /usr/local/bin/redis-server /etc/redis/redis.conf"
    # #######################
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
      - ./redis/certs:/etc/certs
      - ./redis/redis.conf:/etc/redis/redis.conf:ro

  backend:
    image: m-cafe-backend
    build:
      context: ./
      dockerfile: ./services/backend/Dockerfile
    container_name: m-cafe-backend
    env_file:
      - ./docker-envs/.docker-back.env
    depends_on:
      - nginx
      - redis

  nginx:
    image: nginx:1.25.1
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: m-cafe-reverse-proxy

volumes:
  pgdata:
